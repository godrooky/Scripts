--!optimize 2
-- Zeta Final Deobfuscation Engine
-- Methods: Hybrid AST/Bytecode/VM/Entropy Analysis + AI-Guided Reconstruction

local CoreGui = game:GetService("CoreGui")
local Memory = getrenv() or getfenv(2)
local HttpService = game:GetService("HttpService")

-- ==== CONSTANTS ==== --
local OBF_PATTERNS = {
    -- Prometheus
    ["%$%$.+%$%$"] = function(m) return m:gsub("%$", "") end,
    ["_G%[[%\"'].-[%\"']%]"] = function(m) return m:match("[%\"'](.-)[%\"']") or "nil" end,
    
    -- Moonsec V3
    ["\\x%x%x%x%x"] = function(m) return string.char(tonumber(m:sub(3), 16)) end,
    ["::ZM_[A-Z]+::"] = "",

    -- General
    ["%?%?%?%d+"] = function(m) return math.random(1, 100) end,
    ["[%a%d]+%^%^%^[%a%d]+"] = function(m) 
        local parts = m:split("%^%^%^")
        return parts[1]..parts[2] 
    end
}

local VM_SIGNATURES = {
    "loadstring%(getfenv",
    "debug%.getinfo",
    "coroutine%.wrap"
}

-- ==== CORE METHODS ==== --
local function DeepEntropyScan(code)
    -- Phase 1: Frequency analysis
    local freq = {}
    for i = 1, #code do
        local c = code:sub(i,i)
        freq[c] = (freq[c] or 0) + 1
    end

    -- Phase 2: Dynamic XOR detection
    local xor_key = nil
    for i = 1, 255 do
        local test_dec = code:gsub(".", function(c) 
            return string.char(c:byte() ~ i) 
        end)
        if test_dec:find("function") then
            xor_key = i
            break
        end
    end

    -- Phase 3: Apply decryption
    if xor_key then
        code = code:gsub(".", function(c) 
            return string.char(c:byte() ~ xor_key) 
        end)
    end

    return code
end

local function QuantumASTWalk(code)
    -- Reconstruct code flow
    local reconstructed = ""
    local depth = 0
    local buffer = ""

    for line in code:gmatch("(.-)\n") do
        if line:match("^%s*function") or line:match("^%s*if") then
            depth = depth + 1
            buffer = buffer .. line .. "\n" .. string.rep("    ", depth)
        elseif line:match("^%s*end") then
            depth = math.max(0, depth - 1)
            buffer = buffer .. line .. "\n" .. string.rep("    ", depth)
        else
            buffer = buffer .. line .. "\n" .. string.rep("    ", depth)
        end
    end

    return buffer
end

local function VMEmulator(code)
    -- Detect and emulate VM calls
    for _, sig in ipairs(VM_SIGNATURES) do
        if code:find(sig) then
            code = code:gsub(sig.."%b()", function(match)
                return "(-- VM CALL NEUTRALIZED: "..match..")"
            end)
        end
    end
    return code
end

local function PatternBruteforce(code)
    -- Apply all known pattern replacements
    for pattern, replacement in pairs(OBF_PATTERNS) do
        if type(replacement) == "function" then
            code = code:gsub(pattern, replacement)
        else
            code = code:gsub(pattern, replacement)
        end
    end
    return code
end

local function FinalReconstruction(code)
    -- Hybrid deobfuscation pipeline
    local phases = {
        DeepEntropyScan,
        PatternBruteforce,
        VMEmulator,
        QuantumASTWalk,
        function(c) return c:gsub("%s+", " "):gsub("%s*([%(%){}%;,])%s*", "%1") end -- Cleanup
    }

    for _, phase in ipairs(phases) do
        code = phase(code) or code
    end

    return code
end

-- ==== GUI ==== --
local AnnihilatorUI = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 700, 0, 600)
MainFrame.Position = UDim2.new(0.5, -350, 0.5, -300)
MainFrame.BackgroundColor3 = Color3.fromRGB(5, 0, 5)

local InputBox = Instance.new("TextBox")
InputBox.Size = UDim2.new(0.9, 0, 0.7, 0)
InputBox.Position = UDim2.new(0.05, 0, 0.1, 0)
InputBox.BackgroundColor3 = Color3.fromRGB(10, 0, 15)
InputBox.TextColor3 = Color3.fromRGB(255, 100, 255)
InputBox.Font = Enum.Font.RobotoMono
InputBox.TextSize = 12
InputBox.MultiLine = true

local OutputFrame = Instance.new("ScrollingFrame")
OutputFrame.Size = UDim2.new(0.9, 0, 0.7, 0)
OutputFrame.Position = UDim2.new(0.05, 0, 0.1, 0)
OutputFrame.BackgroundColor3 = Color3.fromRGB(15, 0, 20)
OutputFrame.Visible = false

local AnnihilateButton = Instance.new("TextButton")
AnnihilateButton.Text = "OMNIDESTRUCT"
AnnihilateButton.Size = UDim2.new(0.6, 0, 0.08, 0)
AnnihilateButton.Position = UDim2.new(0.2, 0, 0.85, 0)
AnnihilateButton.BackgroundColor3 = Color3.fromRGB(150, 0, 150)
AnnihilateButton.Font = Enum.Font.GothamBlack

AnnihilateButton.MouseButton1Click:Connect(function()
    local cracked = FinalReconstruction(InputBox.Text)
    
    OutputFrame:ClearAllChildren()
    local Display = Instance.new("TextLabel")
    Display.Text = cracked
    Display.Size = UDim2.new(1, 0, 1, 0)
    Display.TextXAlignment = Enum.TextXAlignment.Left
    Display.TextYAlignment = Enum.TextYAlignment.Top
    Display.TextWrapped = true
    Display.Font = Enum.Font.RobotoMono
    Display.TextSize = 12
    Display.TextColor3 = Color3.fromRGB(200, 200, 255)
    Display.BackgroundTransparency = 1
    Display.Parent = OutputFrame
    
    InputBox.Visible = false
    OutputFrame.Visible = true
    OutputFrame.CanvasSize = UDim2.new(0, 0, 0, Display.TextBounds.Y + 20)
end)

-- Assembly
MainFrame.Parent = AnnihilatorUI
InputBox.Parent = MainFrame
OutputFrame.Parent = MainFrame
AnnihilateButton.Parent = MainFrame
AnnihilatorUI.Parent = CoreGui
